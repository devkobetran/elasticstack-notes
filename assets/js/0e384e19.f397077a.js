"use strict";(self.webpackChunkelasticstack_notes=self.webpackChunkelasticstack_notes||[]).push([[3976],{619:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});var s=i(4848),l=i(8453);const r={sidebar_position:1},a="Introduction",t={id:"intro",title:"Introduction",description:"Introduction to Elasticsearch",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/elasticstack-notes/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/devkobetran/elasticstack-notes/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Environment Setup",permalink:"/elasticstack-notes/docs/environment-setup"}},o={},c=[{value:"Introduction to Elasticsearch",id:"introduction-to-elasticsearch",level:2},{value:"How does Elasticsearch work?",id:"how-does-elasticsearch-work",level:3},{value:"Overview of Elastic Stack",id:"overview-of-elastic-stack",level:2},{value:"Kibana",id:"kibana",level:3},{value:"Logstash",id:"logstash",level:3},{value:"Logstash pipeline",id:"logstash-pipeline",level:4},{value:"X-Pack",id:"x-pack",level:3},{value:"Beats",id:"beats",level:3},{value:"Summary of Elastic Stack",id:"summary-of-elastic-stack",level:3},{value:"ELK Stack",id:"elk-stack",level:2},{value:"Walkthrough of Common Architectures",id:"walkthrough-of-common-architectures",level:2},{value:"Ecommerce application example",id:"ecommerce-application-example",level:3},{value:"Dashboard of number of orders, revenue, etc.",id:"dashboard-of-number-of-orders-revenue-etc",level:3},{value:"Business Experiences High Growth",id:"business-experiences-high-growth",level:3},{value:"2 more web servers added to business",id:"2-more-web-servers-added-to-business",level:3},{value:"Elasticsearch vs OpenSearch",id:"elasticsearch-vs-opensearch",level:2},{value:"Understanding the Basic Architecture of Elasticsearch",id:"understanding-the-basic-architecture-of-elasticsearch",level:2},{value:"Sharding and scalability",id:"sharding-and-scalability",level:2},{value:"Purpose of Sharding",id:"purpose-of-sharding",level:3},{value:"Configuring the number of shards",id:"configuring-the-number-of-shards",level:3},{value:"Optimal number of shards",id:"optimal-number-of-shards",level:3},{value:"Understanding Replication",id:"understanding-replication",level:2},{value:"Choosing the number of replica shards",id:"choosing-the-number-of-replica-shards",level:3},{value:"Snapshots",id:"snapshots",level:3},{value:"Increasing query throughput with replication",id:"increasing-query-throughput-with-replication",level:3},{value:"Adding more Nodes to the Cluster in local environment",id:"adding-more-nodes-to-the-cluster-in-local-environment",level:2},{value:"Word of Caution",id:"word-of-caution",level:3},{value:"Overview of Node roles",id:"overview-of-node-roles",level:2},{value:"Master-eligible Role",id:"master-eligible-role",level:3},{value:"Data Role",id:"data-role",level:3},{value:"Ingest Role",id:"ingest-role",level:3},{value:"Machine Learning Role",id:"machine-learning-role",level:3},{value:"Coordination Role",id:"coordination-role",level:3},{value:"Voting-only Role",id:"voting-only-role",level:3},{value:"Kibana Dashboard",id:"kibana-dashboard",level:3},{value:"When to change node roles",id:"when-to-change-node-roles",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,s.jsx)(n.h2,{id:"introduction-to-elasticsearch",children:"Introduction to Elasticsearch"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Elasticsearch"}),": an open source analytics and full-text search engine.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"used for enabling search functionality for apps."}),"\n",(0,s.jsx)(n.li,{children:"could query structured data such as numbers and aggregate data"}),"\n",(0,s.jsx)(n.li,{children:"could analyze structured data"}),"\n",(0,s.jsxs)(n.li,{children:["could send events to Elasticsearch","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"e.g. sales, website clicks, phone calls, etc"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"excellent at analyzing lots of data"}),"\n",(0,s.jsx)(n.li,{children:"easy to use and highly scalable"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Anomality Detection"}),": detect and alert when there is a significant deviation from the normal behavior.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"e.g. typical daily website visits is 50,000 but today it drops to 500"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Application Performance Management (APM)"}),": analyze application logs and system metrics","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"e.g. errors and CPU/memory usage"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Elasticsearch is written in Java and built on Apache Lucene"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"how-does-elasticsearch-work",children:"How does Elasticsearch work?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Data is stored as documents.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"similar to rows in relational databases (e.g. MySQL)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["A document's data is separated into fields","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"similar to column's in relational databases"}),"\n",(0,s.jsx)(n.li,{children:"sort of like a json object"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"To query documents, use a REST API."}),"\n",(0,s.jsx)(n.li,{children:"Queries sent to Elasticsearch are in JSON."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"overview-of-elastic-stack",children:"Overview of Elastic Stack"}),"\n",(0,s.jsx)(n.h3,{id:"kibana",children:"Kibana"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Kibana"}),": an analytics and visualization platform, which lets you easily visualize data from Elasticsearch and analyze it to make sense of it.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"analogy: kibana is like an Elasticsearch dashboard to create visualizations such as pie charts, line charts, etc. Kibana is a web interface to the data that is stored within Elasticsearch."}),"\n",(0,s.jsx)(n.li,{children:"Configure change detection and forecasting in Kibana"}),"\n",(0,s.jsxs)(n.li,{children:["Kibana can manage parts of Elasticsearch and Logstash such as:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Authentication"}),"\n",(0,s.jsx)(n.li,{children:"Authorization"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Kibana can monitor CPU and memory usage to the number of application errors and API response times."}),"\n",(0,s.jsxs)(n.li,{children:["Kibana can have a dashboard with ",(0,s.jsx)(n.strong,{children:"KPIs (Key Points of Interest)"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"logstash",children:"Logstash"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Logstash"})," is a tool to process logs from applications and send them to Elasticsearch.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Logstash is also a ",(0,s.jsx)(n.strong,{children:"data processing pipeline"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The data that Logstash receives are handled as events.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"e.g. log file entries, ecommerce orders, customers, chat messages"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"logstash-pipeline",children:"Logstash pipeline"}),"\n",(0,s.jsx)(n.p,{children:"Three stages, each use a plugin:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Inputs"})," - Receive Events","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Input plugin could be a file, HTTP, rows from a relational database, a Kafka queue, etc"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Filters"})," - Process Events","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Filter plugin could parse csv, xml, json"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"data enrichment"})," such as looking up an IP address to find geographical location."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Outputs"})," - Send the processed events","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Output plugin is where the processed events are sent to. Another name is ",(0,s.jsx)(n.strong,{children:"stashes"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"In summary, Logstash receives events from one or more inputs, processes them, and sends them to one or more stashes."}),"\n",(0,s.jsx)(n.li,{children:"Logstash is horizontally scalable."}),"\n",(0,s.jsxs)(n.li,{children:["A Logstash pipeline is defined in a proprietary markup format that is similar to JSON.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"could add conditional statements to it and make a pipeline dynamic."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Logstash can read the access logs from a web server line by line and process each line as an event.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Logstash receives the line as a text string, so need to parse this string to make some sense of it. In other words, need to structure this piece of unstructured data."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"x-pack",children:"X-Pack"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"X-Pack"}),": a pack of features that adds additional functionality to Elasticsearch and Kibana such as:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Security such as authentication and authorization."}),"\n",(0,s.jsxs)(n.li,{children:["Monitoring of performance, including Logstash.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Could see CPU/memory usage, disk space, etc."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Alerting of unusual events.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"e.g. spikes in CPU/memory usage, application errors, suspicious logins, etc."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Reporting: generate reports of Kibana visualizations and dashboards as pdf or csv."}),"\n",(0,s.jsxs)(n.li,{children:["Machine Learning:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Detect abnormalities (e.g. unusual changes in data)"}),"\n",(0,s.jsx)(n.li,{children:"Forecast future values"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Graph: relationships in the data","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"e.g. When someone views a product, show suggested related products, too."}),"\n",(0,s.jsx)(n.li,{children:"e.g. Song suggestions on Spotify based on what you currently listen to."}),"\n",(0,s.jsxs)(n.li,{children:["Please don't confuse popularity and relevance.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"e.g. Sample 10 people if they use Google. Those that say yes, cannot say much about what is common among them."}),"\n",(0,s.jsx)(n.li,{children:"e.g. Sample 10 people that use stack overflow. Those that say yes, they probably know something about programming."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Graph plugin for Kibana to visualize data"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Elasticsearch SQL: query documents with ",(0,s.jsx)(n.strong,{children:"Query DSL"}),", which is a JSON object defining the query.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Could send SQL queries over HTTP to Elasticsearch, which will translate it to Query DSL behind the scenes for you."}),"\n",(0,s.jsx)(n.li,{children:"The Translate API returns the corresponding Query DSL."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"beats",children:"Beats"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Beats"}),": a collection of data shippers that collect different kinds of data and serve different purposes. They are lightweight agents with a single purpose that you install on servers, which then send data to Logstash or Elasticsearch.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Filebeat"})," is a beat used for collecting log files and sending the log entries off to either Logstash or Elasticsearch. Includes modules for common log types (e.g. nginx and MySQL)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Metricbeat"}),": collects system-level and/or service metrics such as memory and CPU usage. Includes modules for common services (e.g. nginx and MySQL)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Packetbeat"}),": collects network data. e.g. HTTP requests of database transactions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Heartbeat"}),": Monitors service uptime"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"summary-of-elastic-stack",children:"Summary of Elastic Stack"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The center of this stack is Elasticsearch which contains the data."}),"\n",(0,s.jsxs)(n.li,{children:["Ingesting data into Elasticsearch can be done with:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Beats"}),"\n",(0,s.jsx)(n.li,{children:"Logstash"}),"\n",(0,s.jsx)(n.li,{children:"through Elasticsearch's API"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Kibana is a user interface that visualizes the data it retrieves from Elasticsearch."}),"\n",(0,s.jsx)(n.li,{children:"X-pack enables additional features."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"elk-stack",children:"ELK Stack"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ELK Stack"}),": Elasticsearch + Logstash + Kibana"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"walkthrough-of-common-architectures",children:"Walkthrough of Common Architectures"}),"\n",(0,s.jsx)(n.h3,{id:"ecommerce-application-example",children:"Ecommerce application example"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Data is stored in a relational database","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Databases are not great at full-text searches"}),"\n",(0,s.jsx)(n.li,{children:"Use Elasticserach here"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Integration of Elastic search to this application by:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"the application communicates with Elastic search"}),"\n",(0,s.jsx)(n.li,{children:"User Search Query --\x3e request sent to web app --\x3e Search query is sent to Elasticsearch"}),"\n",(0,s.jsx)(n.li,{children:"Could be done with HTTP official client libaries"}),"\n",(0,s.jsxs)(n.li,{children:["When a new product is added or updated, add or update the product within Elasticsearch too.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Data duplication is okay stored in both DB and Elasticsearch."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["What if I have 100,000 prexisting product listings?","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Need to write a script that imports data to Elasticsearch."}),"\n",(0,s.jsx)(n.li,{children:"If there is too much, need to paginate the data"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"dashboard-of-number-of-orders-revenue-etc",children:"Dashboard of number of orders, revenue, etc."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use Kibana which can be run on any machine and connect it to Elasticsearch"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"business-experiences-high-growth",children:"Business Experiences High Growth"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Over time, the web traffic increases significantly"}),"\n",(0,s.jsxs)(n.li,{children:["We need to monitor server resources","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Thus, use Metricbeat to monitor system level metrics such as CPU or memory usage."}),"\n",(0,s.jsx)(n.li,{children:"Metricbeat is installed on the web server"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Configure Metricbeat to send data to Elasticsearch"}),"\n",(0,s.jsx)(n.li,{children:"This data can now be visualized within Kibana"}),"\n",(0,s.jsx)(n.li,{children:"Metricbeat ships with default Kibana dashboards"}),"\n",(0,s.jsx)(n.li,{children:"The Kibana configuration is stored within Elasticsearch"}),"\n",(0,s.jsxs)(n.li,{children:["We want to monitor the access and error logs","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Access logs tell us how long it took the web server to process each request"}),"\n",(0,s.jsx)(n.li,{children:"Response times can be monitored for each endpoint"}),"\n",(0,s.jsx)(n.li,{children:"Helps identiy bad deployments"}),"\n",(0,s.jsx)(n.li,{children:"Use Filebeat to have logs processed and stored within Elasticsearch"}),"\n",(0,s.jsx)(n.li,{children:"Filebeat ships with modules for common log file formats"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-more-web-servers-added-to-business",children:"2 more web servers added to business"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"More kinds of data is added to Elasticsearch"}),"\n",(0,s.jsxs)(n.li,{children:["Need to do more advanced event processing","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Don't want to do this within web app to clutter the business logic code because it might increase response time"}),"\n",(0,s.jsx)(n.li,{children:"Decentralized event processing."}),"\n",(0,s.jsx)(n.li,{children:"Decreases the maintainability of the system"}),"\n",(0,s.jsx)(n.li,{children:"Goal to meet: Centralize event processing in one place"}),"\n",(0,s.jsx)(n.li,{children:"Achieve this goal with Logstash"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Logstash will process events and send them to Elasticsearch"}),"\n",(0,s.jsx)(n.li,{children:"Event processing is now centralized within Logstash"}),"\n",(0,s.jsx)(n.li,{children:"Could optionally centralize the data from Metricbeat and Filebeat to send to Logstash"}),"\n",(0,s.jsx)(n.li,{children:"Ideally, all events go through Logstash."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"elasticsearch-vs-opensearch",children:"Elasticsearch vs OpenSearch"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Basically, Elastic vs AWS's OpenSearch"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Elasticsearch and Kibana license changes to ensure cloud providers collaborate with Elastic"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"OpenSearch is controlled and developed by AWS"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The Core APIs between ElasticSearch and OpenSearch are the same:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Search Queries"}),"\n",(0,s.jsx)(n.li,{children:"Indexing Documents"}),"\n",(0,s.jsx)(n.li,{children:"Aggregations"}),"\n",(0,s.jsx)(n.li,{children:"Index Management"}),"\n",(0,s.jsx)(n.li,{children:"Basic Security"}),"\n",(0,s.jsx)(n.li,{children:"etc."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"ElasticSearch's vertical solutions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SIEM"}),"\n",(0,s.jsx)(n.li,{children:"Observability"}),"\n",(0,s.jsx)(n.li,{children:"Enterprise Search"}),"\n",(0,s.jsx)(n.li,{children:"Machine Learning"}),"\n",(0,s.jsx)(n.li,{children:"etc."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"OpenSearch's vertical solutions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Security Analytics"}),"\n",(0,s.jsx)(n.li,{children:"Observability"}),"\n",(0,s.jsx)(n.li,{children:"Machine Learning"}),"\n",(0,s.jsx)(n.li,{children:"etc."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"understanding-the-basic-architecture-of-elasticsearch",children:"Understanding the Basic Architecture of Elasticsearch"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When you start up Elasticsearch, it starts up a node and a cluster.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.strong,{children:"node"})," is an instance of Elasticsearch that stores data."]}),"\n",(0,s.jsx)(n.li,{children:"You can run as many nodes as you want to store a lot of data."}),"\n",(0,s.jsx)(n.li,{children:"Each node belongs to a cluster."}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.strong,{children:"cluster"})," is a collection of related nodes that together contain all of our data."]}),"\n",(0,s.jsx)(n.li,{children:"Clusters are completely independent of each other by default."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Each unit of data stored within your cluster is called a document.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Documents"})," are JSON objects containing your data."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"When you index a document, the original JSON object that you sent to Elasticsearch is stored along with some metadata that Elasticsearch uses internally."}),"\n",(0,s.jsxs)(n.li,{children:["Every document within Elasticsearch is stored within an index.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"An index groups documents together logically, as well as provide configuration options that are related to scalability and availability."}),"\n",(0,s.jsxs)(n.li,{children:["An ",(0,s.jsx)(n.strong,{children:"index"})," is a collection of documents that have similar characteristics and are logically related."]}),"\n",(0,s.jsxs)(n.li,{children:["An index may contain as many documents as you want, so there is no hard limit.","\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Search queries are run against indices."})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Cloud deployments consist of multiple nodes by default to achieve high availability."})}),"\n",(0,s.jsx)(n.h2,{id:"sharding-and-scalability",children:"Sharding and scalability"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sharding"})," is a way to divide indices into smaller pieces","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Each piece is called a ",(0,s.jsx)(n.strong,{children:"shard"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Sharding is done at the index level"}),"\n",(0,s.jsx)(n.li,{children:"Purpose of sharding is to horizontally scale the data volume"}),"\n",(0,s.jsx)(n.li,{children:"A shard is somewhat an independent index"}),"\n",(0,s.jsx)(n.li,{children:"Each shard is an Apache Lucene index"}),"\n",(0,s.jsx)(n.li,{children:"An Elasticsearch index consists of one or more Lucene indices"}),"\n",(0,s.jsx)(n.li,{children:"A shard has no predefined size, it grows as documents are added to it."}),"\n",(0,s.jsx)(n.li,{children:"A shard may store up to 2 billion documents"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Situation without sharding"}),":"]}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart BT;\n\nC[Index 600GB] --\x3e|Too Big| A((Node A, 500 GB))\nC --\x3e|Too Big| B((Node B, 500 GB))\n\nstyle A fill:green,color:white;\nstyle B fill:orange,color:white;\nstyle C fill:grey,color:white,stroke:black;\n"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The whole index of 600 GB does not fit within either node of 500 GB."}),"\n",(0,s.jsx)(n.li,{children:"Thus, running the index on a single shard does not work."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Situation in dividng the index into 2 shards"}),":"]}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart BT;\n\nsubgraph C[Index 600GB]\n  direction LR\n  D[Shard D 300GB]\n  E[Shard E 300GB]\nend\n\nD --\x3e A((Node A, 500 GB))\nE --\x3e B((Node B, 500 GB))\n\nstyle A fill:green,color:white;\nstyle B fill:orange,color:white;\nstyle C fill:white,color:black,stroke:black;\nstyle D fill:grey,color:white,stroke:black;\nstyle E fill:grey,color:white,stroke:black;\n"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A shard of 300GB can now fit into each node."}),"\n",(0,s.jsx)(n.li,{children:"You can have a higher number of shards, too, if desired. Just keep splitting up the index into smaller pieces."}),"\n",(0,s.jsx)(n.li,{children:"Any number of shards can go to any node."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"purpose-of-sharding",children:"Purpose of Sharding"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ability to store more documents"}),"\n",(0,s.jsx)(n.li,{children:"To easier fit large indices onto nodes"}),"\n",(0,s.jsxs)(n.li,{children:["Improved performance","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Parallelization of queries increases the throughput of an index"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"configuring-the-number-of-shards",children:"Configuring the number of shards"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"An index contains a single chard by default"}),"\n",(0,s.jsx)(n.li,{children:"Increase the number of shards with the Split API"}),"\n",(0,s.jsx)(n.li,{children:"Reduce the number of shards with the Split API"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"optimal-number-of-shards",children:"Optimal number of shards"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"It depends for your situation as many factors are involved"}),"\n",(0,s.jsxs)(n.li,{children:["Factors:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"number of nodes and their capacity"}),"\n",(0,s.jsx)(n.li,{children:"number of indices and their sizes"}),"\n",(0,s.jsx)(n.li,{children:"number of queries"}),"\n",(0,s.jsx)(n.li,{children:"etc."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Have a couple of shards for millions of documents."}),"\n",(0,s.jsx)(n.li,{children:"Stick to default of one shard for thousands of documents"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"understanding-replication",children:"Understanding Replication"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Hardware can fail at any time, so need to handle it."}),"\n",(0,s.jsx)(n.li,{children:"Elasticsearch supports replication for fault tolerance."}),"\n",(0,s.jsx)(n.li,{children:"Replication is supported natively and enabled by default."}),"\n",(0,s.jsx)(n.li,{children:"With many databases, setting up replication can be a pain."}),"\n",(0,s.jsx)(n.li,{children:"Replication is extremely easy with Elasticsearch."}),"\n",(0,s.jsx)(n.li,{children:"Replication is configured at the index level"}),"\n",(0,s.jsx)(n.li,{children:"Replication can increase availability and the throughput of a given index."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Replication"})," creates complete copies of shards called ",(0,s.jsx)(n.strong,{children:"replica shards"}),".","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A replica shard can serve search requests"}),"\n",(0,s.jsx)(n.li,{children:"A replica shard cannot be allocated to the same node as the Primary Shard."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Primary Shard"}),": the master shard that has been replicated or copied."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Replication group"})," = primary shard + replica shards"]}),"\n",(0,s.jsx)(n.li,{children:"The number of replicas can be configured at index creation."}),"\n",(0,s.jsx)(n.li,{children:"Default number of replicas per shard is 1."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example Index"}),":"]}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR;\n\nsubgraph A[Index]\n  direction BT\n\n  subgraph B[Replication Group 1]\n    direction BT\n\n    D[Primary Shard A]\n    E[Replica A1]\n    F[Replica A2]\n  end\n\n  subgraph C[Replication Group 2]\n    direction BT\n\n    G[Primary Shard B]\n    H[Replica B1]\n    I[Replica B2]\n  end\nend\n\nstyle A fill:grey,color:white,stroke:black;\nstyle B fill:white,color:black,stroke:black;\nstyle C fill:white,color:black,stroke:black;\nstyle D fill:orange,color:white;\nstyle E fill:green,color:white;\nstyle F fill:green,color:white;\nstyle G fill:orange,color:white;\nstyle H fill:green,color:white;\nstyle I fill:green,color:white;\n"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart BT;\n\nsubgraph C[Node B]\n  direction LR\n\n  G[Primary Shard B]\n  H[Replica B1]\n  I[Replica B2]\nend\n\nsubgraph B[Node A]\n  direction LR\n\n  D[Primary Shard A]\n  E[Replica A1]\n  F[Replica A2]\nend\n\nstyle B fill:blue,color:white;\nstyle C fill:red,color:white;\nstyle D fill:orange,color:white;\nstyle E fill:green,color:white;\nstyle F fill:green,color:white;\nstyle G fill:orange,color:white;\nstyle H fill:green,color:white;\nstyle I fill:green,color:white;\n"}),"\n",(0,s.jsx)(n.h3,{id:"choosing-the-number-of-replica-shards",children:"Choosing the number of replica shards"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ideal number of shards depends on use case"}),"\n",(0,s.jsx)(n.li,{children:"For mission critical systems, downtime is not acceptable."}),"\n",(0,s.jsxs)(n.li,{children:["Think if it is okay for data to be unavailable while you are trying to restore it.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If data loss is not a disaster, replicate shards once."}),"\n",(0,s.jsx)(n.li,{children:"For critical systems, data should be replicated at least twice."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"By default, 1 primary shard and 1 replica shard is added to an index by default."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"snapshots",children:"Snapshots"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Elasticsearch supports taking snapshots as backups"}),"\n",(0,s.jsx)(n.li,{children:"Snapshots used to restore to a given point in time"}),"\n",(0,s.jsx)(n.li,{children:"Snapshots can be taken at the index level or for the entire cluster."}),"\n",(0,s.jsxs)(n.li,{children:["Use snapshots for backups and replication for high availability and performance","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If a mistake is made, could roll back to previous snapshot."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"increasing-query-throughput-with-replication",children:"Increasing query throughput with replication"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Replica shards of a replication group can serve different search requests simultaneously.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This increases the number of requests that can be handled at the same time."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Elasticsearch intelligently routes requests to the best shard."}),"\n",(0,s.jsx)(n.li,{children:"CPU parallelizatoin improves performance if multiple replica shards are stored on the same node."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"adding-more-nodes-to-the-cluster-in-local-environment",children:"Adding more Nodes to the Cluster in local environment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/delayed-allocation.html",children:"Delaying allocation when a node leaves"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Sharding enables us to scale an index's data volume"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Need to add additional nodes..."}),"\n",(0,s.jsx)(n.li,{children:"Replication requires at least 2 nodes."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"second-node/config/elasticsearch.yml"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"node.name: second-node\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"third-node/config/elasticsearch.yml"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"node.name: third-node\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Second Node"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Generate an enrollment token","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In terminal: ",(0,s.jsx)(n.code,{children:"cd elasticsearch"}),", then:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"bin/elasticsearch-create-enrollment-token --scope node\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Open another terminal window and ",(0,s.jsx)(n.code,{children:"cd second-node"}),", then:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"bin/elasticsearch --enrollment-token ENTER_GENERATED_ENROLLMENT_TOKEN\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Third Node"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Generate an enrollment token","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In terminal: ",(0,s.jsx)(n.code,{children:"cd elasticsearch"}),", then:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"bin/elasticsearch-create-enrollment-token --scope node\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Open another terminal window and ",(0,s.jsx)(n.code,{children:"cd third-node"}),", then:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"bin/elasticsearch --enrollment-token ENTER_GENERATED_ENROLLMENT_TOKEN\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"word-of-caution",children:"Word of Caution"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["After adding a third node, at least 2 nodes are required to run the cluster.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If 2 nodes are lost, the cluster cannot elect a master node."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["If you want to run just a single node moving forward, don't add a third node.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Start fresh with a single-node cluster afterwards"}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"overview-of-node-roles",children:"Overview of Node roles"}),"\n",(0,s.jsx)(n.h3,{id:"master-eligible-role",children:"Master-eligible Role"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The node may be elected as the cluster's master node"}),"\n",(0,s.jsx)(n.li,{children:"A master node is responsible for creating and deleting indices, etc."}),"\n",(0,s.jsx)(n.li,{children:"A node with this role will not automatically become the master node"}),"\n",(0,s.jsxs)(n.li,{children:["May be used for having dedicated master nodes","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"useful for large clusters"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"data-role",children:"Data Role"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Enables a node to store data"}),"\n",(0,s.jsx)(n.li,{children:"Storing data includes performing queries related to that data, such as search queries."}),"\n",(0,s.jsx)(n.li,{children:"For relatively small clusters, this role is always enabled."}),"\n",(0,s.jsx)(n.li,{children:"Useful for having dedicated master nodes."}),"\n",(0,s.jsx)(n.li,{children:"Used as part of configuring a dedicated master node."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"ingest-role",children:"Ingest Role"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Enables a node to run ingest pipelines"}),"\n",(0,s.jsxs)(n.li,{children:["Ingest pipelines are a series of steps (processors) that are performed when indexing documents","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Processors may manipulate documents"}),"\n",(0,s.jsx)(n.li,{children:"i.g. resolving an IP to lat/lon"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Similar to a simplified version of Logstash directly within Elasticsearch"}),"\n",(0,s.jsx)(n.li,{children:"Useful for having dedicated ingest nodes"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"machine-learning-role",children:"Machine Learning Role"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"node.ml"})," identifies a node as a machine learning node","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lets the node to run machine learning jobs"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"xpack.ml.enabled"})," enables or disables the machine learning API for the node."]}),"\n",(0,s.jsx)(n.li,{children:"Useful for running ML jobs that don't affect other tasks"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"coordination-role",children:"Coordination Role"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Coordination refers to the distribution of queries and the aggregation of results"}),"\n",(0,s.jsx)(n.li,{children:"Useful for coordination-only nodes (for large clusters)"}),"\n",(0,s.jsx)(n.li,{children:"Configured by disabling all other roles"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"voting-only-role",children:"Voting-only Role"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Rarely used"}),"\n",(0,s.jsx)(n.li,{children:"A node that will participate in the voting for a new master node"}),"\n",(0,s.jsx)(n.li,{children:"The node cannot be elected as the master node itself"}),"\n",(0,s.jsx)(n.li,{children:"Only used for large clusters"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"kibana-dashboard",children:"Kibana Dashboard"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"GET /_cat/nodes?v"})}),"\n",(0,s.jsxs)(n.p,{children:["Output --\x3e Column Name: ",(0,s.jsx)(n.code,{children:"node.role"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["e.g. ",(0,s.jsx)(n.code,{children:"dim"})," means:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"data"}),"\n",(0,s.jsx)(n.li,{children:"ingest"}),"\n",(0,s.jsx)(n.li,{children:"master"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"these values are usually default"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"when-to-change-node-roles",children:"When to change node roles"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"depends on situation"}),"\n",(0,s.jsx)(n.li,{children:"useful for large clusters"}),"\n",(0,s.jsx)(n.li,{children:"typically done when optimizing the cluster to scale the number of requests."}),"\n",(0,s.jsxs)(n.li,{children:["Change other things first:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"number of nodes"}),"\n",(0,s.jsx)(n.li,{children:"number of shards"}),"\n",(0,s.jsx)(n.li,{children:"number of replica shards"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Better understand what hardware resources are used for"}),"\n",(0,s.jsx)(n.li,{children:"Only change roles if you know what you are doing"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var s=i(6540);const l={},r=s.createContext(l);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);